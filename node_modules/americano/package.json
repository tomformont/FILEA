{
  "name": "americano",
  "description": "Wrapper for Express with an opinionated configuration.",
  "keywords": [
    "framework"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/mycozycloud/americano/blob/master/LICENSE"
    }
  ],
  "version": "0.3.1",
  "bin": {
    "americano": "./bin/americano"
  },
  "bugs": {
    "url": "https://github.com/mycozycloud/americano/issues"
  },
  "author": {
    "name": "Frank R"
  },
  "contributors": [],
  "engines": {
    "node": "*"
  },
  "main": "./main.js",
  "dependencies": {
    "express": "3.4.6",
    "commander": "2.0.0",
    "mkdirp": "0.3.5",
    "printit": "0.1.3"
  },
  "devDependencies": {
    "coffee-script": "*",
    "request-json": "0.4.1",
    "chai": "*",
    "mocha": "*"
  },
  "scripts": {
    "prepublish": "cake build",
    "test": "cake tests"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mycozycloud/americano.git"
  },
  "optionalDependencies": {},
  "readme": "# Americano\n\n[ExpressJS](http://expressjs.com/)\nis an awesome tool to build small web application. But once you start\nusing it, you discover that writing the configuration and the routes\noften leads to ugly code. To solve that, Americano acts as a\nwrapper around Express and make it more opinionated about how to write routes\nand configuration. See in the following how it make things cleaner.\n\n## When to use Americano?\n\nAmericano is:\n\n* a tool to quickstart small web applications or web modules.\n* oriented to build single page-app and REST API.\n\nAmericano is not:\n\n* a full-featured framework for making big web applications.\n\nNB: Americano inherits all the [ExpressJS\nfeatures](http://expressjs.com/guide.html)\n\n## Getting started\n\n\n### Binary\n\nThere is a binary provided with Americano to start quickly your project:\n\n#### Install\n\n    npm install americano -g\n\n#### Usage\n\n    americano blog\n\n#### Output\n\n    create: blog\n    create: blog/package.json\n    create: blog/server.js\n    create: blog/README.md\n    create: blog/client/public\n    create: blog/server/models\n    create: blog/server/controllers\n    create: blog/server/controllers/routes.js\n    create: blog/server/controllers/index.js\n    create: blog/server/config.js\n\n    install dependencies:\n    $ cd blog && npm install\n\n    Run your application:\n    $ npm start\n\n#### Coffeescript Usage\n\n    americano --coffee blog\n\n### Handmade\n\nTo write an Americano application you need to add it as a dependency of your\npackage.json file.\n\n    npm install americano --save\n\nThen you must to create your main file:\n\n```javascript\n// ./server.js\nvar americano = require('americano');\n\nvar port = process.env.PORT || 3000;\namericano.start({name: 'yourapp', port: port});\n```\n\n\n## Configuration\n\nAmericano requires a config file located at the\nroot of your project, let's add it:\n\n```javascript\n// ./server/config.js\nvar americano = require('americano');\n\nmodule.exports = {\n  common: [\n    americano.bodyParser(),\n    americano.methodOverride(),\n    americano.errorHandler({\n      dumpExceptions: true,\n      showStack: true\n    }),\n    americano.static(__dirname + '/../client/public', {\n      maxAge: 86400000\n    })\n  ],\n  development: {\n    use: [\n      americano.logger('dev')\n    ],\n    set: {\n      debug: 'on'\n    }\n  },\n  production: [\n    americano.logger('short')\n  ]\n};\n```\n\n\n## Routes\n\nOnce configuration is done, Americano will ask for your routes to be described\nin a single file following this syntax:\n\n\n```javascript\n// ./server/controllers/routes.coffee\nvar posts = require('./posts');\nvar comments = require('./comments');\n\nmodule.exports = {\n  'posts': {\n    get: posts.all,\n    post: posts.create\n  },\n  'posts/:id': {\n    get: posts.show,\n    put: posts.modify,\n    del: [posts.verifyToken, posts.destroy]\n  },\n  'posts/:id/comments': {\n    get: comments.fromPost\n  },\n  'comments': {\n    get: comments.all\n  }\n};\n```\n\n## Controllers\n\nYour controllers can be written as usual, they are ExpressJS controlllers.\n\n## Final thoughts\n\nYou're done! Just run `node server.js` and you have your configured\nExpress web server up and running!\n\nBy the way this is how your single-page app looks like with Americano:\n\n\n    your-blog/\n        server.js\n        server/\n            config.js\n            controllers/\n                routes.js\n                posts.js\n                comments.js\n            models/\n                post.js\n                comment.js\n        client/\n            ... front-end stuff ...\n\n## Plugins\n\nAmericano allows to use plugins that shares its philosophy of making cleaner\nand more straightforward things.\n\nActually there is only one plugin, feel free to add yours:\n\n* [americano-cozy](https://github.com/frankrousseau/americano-cozy): a plugin\nto make [Cozy](http://cozy.io) application faster.\n\n## What about contributions?\n\nHere is what I would like to do next:\n\n* make a plugin for socket-io\n* make a plugin for mongoose\n* make a plugin for sqlite\n* make a plugin for cozy-realtime-adapter\n\nI didn't start any development yet, so you're welcome to participate!\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mycozycloud/americano",
  "_id": "americano@0.3.1",
  "dist": {
    "shasum": "fd40f55e8b06cb1f13e5ce53b371f092843a310f"
  },
  "_from": "americano@~0.3.0",
  "_resolved": "https://registry.npmjs.org/americano/-/americano-0.3.1.tgz"
}
