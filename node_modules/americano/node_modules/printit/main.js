// Generated by CoffeeScript 1.6.3
var Logger, colors, dateFormat, levelColors;

dateFormat = require('./date-format');

module.exports = function(options) {
  return new Logger(options);
};

colors = {
  blue: ['\x1B[34m', '\x1B[39m'],
  cyan: ['\x1B[36m', '\x1B[39m'],
  green: ['\x1B[32m', '\x1B[39m'],
  magenta: ['\x1B[36m', '\x1B[39m'],
  red: ['\x1B[31m', '\x1B[39m'],
  yellow: ['\x1B[33m', '\x1B[39m']
};

levelColors = {
  error: colors.red,
  debug: colors.green,
  warn: colors.yellow,
  info: colors.blue
};

Logger = (function() {
  function Logger(options) {
    this.options = options;
    if (this.options == null) {
      this.options = {};
    }
    if (this.options.date && (this.options.dateFormat == null)) {
      this.options.dateFormat = 'YYYY-MM-DD hh:mm:ss:S';
    }
  }

  Logger.prototype.colorify = function(text, color) {
    return "" + color[0] + text + color[1];
  };

  Logger.prototype.format = function(level, text) {
    var date;
    if (text instanceof Object) {
      text = JSON.stringify(text);
    }
    if (this.options.prefix != null) {
      text = "" + this.options.prefix + " | " + text;
    }
    if (process.env.NODE_ENV !== 'production') {
      level = this.colorify(level, levelColors[level]);
    }
    if (level) {
      text = "" + level + " - " + text;
    }
    if (this.options.date) {
      date = new Date().format(this.options.dateFormat);
      text = "[" + date + "] " + text;
    }
    return text;
  };

  Logger.prototype.info = function(text) {
    if (process.env.NODE_ENV !== 'test') {
      return console.info(this.format('info', text));
    }
  };

  Logger.prototype.warn = function(text) {
    if (process.env.NODE_ENV !== 'test') {
      return console.warn(this.format('warn', text));
    }
  };

  Logger.prototype.error = function(text) {
    if (process.env.NODE_ENV !== 'test') {
      return console.error(this.format('error', text));
    }
  };

  Logger.prototype.debug = function(text) {
    if (process.env.NODE_ENV !== 'test') {
      return console.info(this.format('debug', text));
    }
  };

  Logger.prototype.raw = function(text) {
    return console.log(text);
  };

  Logger.prototype.lineBreak = function(text) {
    return this.raw(Array(80).join("*"));
  };

  return Logger;

})();
